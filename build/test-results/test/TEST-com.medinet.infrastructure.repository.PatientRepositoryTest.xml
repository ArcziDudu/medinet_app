<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.medinet.infrastructure.repository.PatientRepositoryTest" tests="10" skipped="0" failures="0" errors="0" timestamp="2023-07-27T20:38:17" hostname="ARTUR" time="0.768">
  <properties/>
  <testcase name="thatShouldReturnAllPatients()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.131"/>
  <testcase name="testFindByUserId()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.06"/>
  <testcase name="findByIdWhenPatientIdDoesNotExist()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.031"/>
  <testcase name="thatShouldFindByIdCorrect()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.05"/>
  <testcase name="testExistsByPhoneNumber()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.065"/>
  <testcase name="thatDoesNotExistByPhoneNumber()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.06"/>
  <testcase name="thatSavePatientCorrect()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.067"/>
  <testcase name="thatShouldFindByEmail()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.141"/>
  <testcase name="testFindByNonExistingEmail()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.051"/>
  <testcase name="testFindByNonExistingUserId()" classname="com.medinet.infrastructure.repository.PatientRepositoryTest" time="0.077"/>
  <system-out><![CDATA[2023-07-27T22:38:16.982+02:00  INFO 176508 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.medinet.infrastructure.repository.PatientRepositoryTest]: PatientRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-07-27T22:38:16.998+02:00  INFO 176508 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.medinet.Application for test class com.medinet.infrastructure.repository.PatientRepositoryTest
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: insert into patient (address_id,email,name,phone,surname,user_id) values (?,?,?,?,?,?)
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0 where p1_0.user_id=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id where p1_0.patient_id=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id from patient p1_0 where p1_0.phone=? fetch first ? rows only
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: insert into patient (address_id,email,name,phone,surname,user_id) values (?,?,?,?,?,?)
Hibernate: select p1_0.patient_id from patient p1_0 where p1_0.phone=? fetch first ? rows only
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0 where p1_0.email=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: insert into patient (address_id,email,name,phone,surname,user_id) values (?,?,?,?,?,?)
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0 where p1_0.email=?
Hibernate: select p1_0.patient_id,a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,u1_0.user_id,u1_0.active,u1_0.email,u1_0.password,r1_0.user_id,r1_1.role_id,r1_1.role from patient p1_0 left join address a1_0 on a1_0.address_id=p1_0.address_id left join medinet_user u1_0 on u1_0.user_id=p1_0.user_id left join (medinet_user_role r1_0 join medinet_role r1_1 on r1_1.role_id=r1_0.role_id) on u1_0.user_id=r1_0.user_id where p1_0.patient_id=?
Hibernate: select a1_0.address_id,a1_0.city,a1_0.country,a1_0.postal_code,a1_0.street from address a1_0 where a1_0.address_id=?
Hibernate: select u1_0.user_id,u1_0.active,u1_0.email,u1_0.password from medinet_user u1_0 where u1_0.user_id=?
Hibernate: update patient set address_id=?,email=?,name=?,phone=?,surname=?,user_id=? where patient_id=?
Hibernate: update address set city=?,country=?,postal_code=?,street=? where address_id=?
Hibernate: select p1_0.patient_id,p1_0.address_id,p1_0.email,p1_0.name,p1_0.phone,p1_0.surname,p1_0.user_id from patient p1_0 where p1_0.user_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
